openapi: 3.0.3
info:
  title: Onboarding API
  description: HEI - H1 - STD22023
  version: 1.0.11
servers:
  - url: https://STD22023
tags:
  - name: Student Management
    description: Operations related to student management
  - name: Teacher Management
    description: Operations related to teacher management
paths:
  /students:
    get:
      summary: Display students
      description: Display students
      tags:
        - Student Management
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          description: Invalid status value
    post:
      summary: Add a new student
      description: Add a new student
      operationId: addStudent
      tags:
        - Student Management
      requestBody:
        description: Create a new student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '405':
          description: Invalid input
  /students/{studentId}:   
    put:
      summary: Update student details
      description: Update details of a student
      operationId: updateStudent
      tags:
        - Student Management
      parameters:
        - name: studentId
          in: path
          description: ID of the student to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated student data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    delete:
      summary: Delete a student
      description: Delete a student by ID
      operationId: deleteStudent
      tags:
        - Student Management
      parameters:
        - name: studentId
          in: path
          description: ID of the student to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Student successfully deleted
        '404':
          description: Student not found
  /teachers:
    get:
      summary: Display teachers
      description: Display teachers
      tags:
        - Teacher Management
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
    post:
      summary: Add a new teacher
      description: Add a new teacher
      operationId: addTeacher
      tags:
        - Teacher Management
      requestBody:
        description: Create a new teacher
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '405':
          description: Invalid input
components:
  schemas:
    Student:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Tiana Finaritra RANDRIANARISOA
        birthDate:
          type: string
          format: date
    Teacher:
      required:
        - name
        - firstname
        - courses
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: RAMAROZAKA
        firstname:
          type: string
          example: Tokimahery
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    Course:
      required:
        - courseName
        - courseCode
        - duration
      type: object
      properties:
        courseName:
          type: string
          example: Algorithmique
        courseCode:
          type: string
          example: prog1
        duration:
          type: string
          example: 2 hours
  requestBodies:
    Students:
      description: Student object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Student'
        application/xml:
          schema:
            $ref: '#/components/schemas/Student'
    TeacherRequest:
      description: Teacher object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Teacher'
